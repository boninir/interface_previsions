<?php

namespace Base\CoreBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\Query\ResultSetMappingBuilder;

/**
 * WindFarmRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WindFarmRepository extends EntityRepository
{
	public function getWindFarmsAndTurbines(){

		$rsm = new ResultSetMapping();
		$rsm->addEntityResult('BaseCoreBundle:WindFarm', 'wf');
		$rsm->addFieldResult('wf', 'wf_id', 'id');
		$rsm->addFieldResult('wf', 'wf_name', 'name');
		$rsm->addFieldResult('wf', 'wf_alias', 'alias');
		$rsm->addJoinedEntityResult('BaseCoreBundle:Turbine' , 't', 'wf', 'turbines');
		$rsm->addFieldResult('t', 't_id', 'id');
		$rsm->addFieldResult('t', 't_name', 'name');
		$rsm->addFieldResult('t', 't_alias', 'alias');

		$sql = 'SELECT "wf"."id" as wf_id,
					   "wf"."name" as wf_name,
					   "wf"."alias" as wf_alias,
					   "t"."id" as t_id,
					   "t"."name" as t_name,
					   "t"."alias" as t_alias
  				FROM "DATA_WAREHOUSE"."WindFarm" wf
  				INNER JOIN "DATA_WAREHOUSE"."Turbine" t
  				ON "wf"."id" = "t"."windFarmId"
  				ORDER BY "t"."name"
  				'; //tmp => a supprimer

  		$qb = $this->_em->createNativeQuery($sql, $rsm);

		return $qb->getArrayResult();
	}
}
